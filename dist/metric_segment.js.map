{"version":3,"sources":["../src/metric_segment.js"],"names":[],"mappings":"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","file":"metric_segment.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport angular from 'angular';\n\n// Component copied from: grafana/public/app/core/directives/metric_segment.js\n\nangular\n  .module('grafana.directives')\n  .directive('dalmatinerMetricSegment', function($compile, $sce) {\n\n    var inputTemplate = '<input type=\"text\" data-provide=\"typeahead\" ' +\n      ' class=\"gf-form-input input-medium\"' +\n      ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var linkTemplate = '<a class=\"gf-form-label\" ng-class=\"segment.cssClass\" ' +\n      'tabindex=\"1\" give-focus=\"segment.focus\" ng-bind-html=\"segment.html\"></a>';\n\n    var selectTemplate = '<a class=\"gf-form-input gf-form-input--dropdown\" ng-class=\"segment.cssClass\" ' +\n      'tabindex=\"1\" give-focus=\"segment.focus\" ng-bind-html=\"segment.html\"></a>';\n\n    return {\n      restrict: 'E',\n      scope: {\n        segment: \"=\",\n        getOptions: \"&\",\n        onChange: \"&\",\n        useHtmlLabel: \"&\"\n      },\n      link: function($scope, elem, attrs) {\n        var $input = $(inputTemplate);\n        var $button = $(attrs.styleMode === 'select' ? selectTemplate : linkTemplate);\n        var segment = $scope.segment;\n        var options = null;\n        var cancelBlur = null;\n        var linkMode = true;\n\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $scope.updateVariableValue = function(value) {\n          if (value === '' || segment.value === value) {\n            return;\n          }\n\n          $scope.$apply(function() {\n            var selected = _.findWhere($scope.altSegments, { value: value });\n            if (selected) {\n              segment.value = selected.value;\n              segment.html = selected.html;\n              segment.fake = false;\n              segment.expandable = selected.expandable;\n            }\n            else if (segment.custom !== 'false') {\n              segment.value = value;\n              segment.html = $sce.trustAsHtml(value);\n              segment.expandable = true;\n              segment.fake = false;\n            }\n\n            $scope.onChange();\n          });\n        };\n\n        $scope.switchToLink = function(fromClick) {\n          if (linkMode && !fromClick) { return; }\n\n          clearTimeout(cancelBlur);\n          cancelBlur = null;\n          linkMode = true;\n          $input.hide();\n          $button.show();\n          $scope.updateVariableValue($input.val());\n        };\n\n        $scope.inputBlur = function() {\n          // happens long before the click event on the typeahead options\n          // need to have long delay because the blur\n          cancelBlur = setTimeout($scope.switchToLink, 200);\n        };\n\n        $scope.source = function(query, callback) {\n          if (options) { return options; }\n\n          $scope.$apply(function() {\n            $scope.getOptions().then(function(altSegments) {\n              $scope.altSegments = altSegments;\n              options = _.map($scope.altSegments, function(alt) { return alt.value; });\n\n              // add custom values\n              if (segment.custom !== 'false') {\n                if (!segment.fake && _.indexOf(options, segment.value) === -1) {\n                  options.unshift(segment.value);\n                }\n              }\n\n              callback(options);\n\n              // Change the label options to the html values\n              if ($scope.useHtmlLabel) {\n\n                $input.data('typeahead').$menu.find('a').each(function () {\n                  var $el = $(this);\n                  var item = _.find($scope.altSegments, {value: $el.text()});\n                  if (item) {\n                    $el.text(item.html);\n                  }\n                })\n              }\n            });\n          });\n        };\n\n        $scope.updater = function(value) {\n          if (value === segment.value) {\n            clearTimeout(cancelBlur);\n            $input.focus();\n            return value;\n          }\n\n          $input.val(value);\n          $scope.switchToLink(true);\n\n          return value;\n        };\n\n        $scope.matcher = function(item) {\n          var str = this.query;\n          if (str[0] === '/') { str = str.substring(1); }\n          if (str[str.length - 1] === '/') { str = str.substring(0, str.length-1); }\n          try {\n            return item.toLowerCase().match(str);\n          } catch(e) {\n            return false;\n          }\n        };\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({ source: $scope.source, minLength: 0, items: 10000, updater: $scope.updater, matcher: $scope.matcher });\n\n        var typeahead = $input.data('typeahead');\n        typeahead.lookup = function () {\n          this.query = this.$element.val() || '';\n          var items = this.source(this.query, $.proxy(this.process, this));\n          return items ? this.process(items) : items;\n        };\n\n        $button.keydown(function(evt) {\n          // trigger typeahead on down arrow or enter key\n          if (evt.keyCode === 40 || evt.keyCode === 13) {\n            $button.click();\n          }\n        });\n\n        $button.click(function() {\n          options = null;\n          $input.css('width', ($button.width() + 16) + 'px');\n\n          $button.hide();\n          $input.show();\n          $input.focus();\n\n          linkMode = false;\n\n          var typeahead = $input.data('typeahead');\n          if (typeahead) {\n            $input.val('');\n            typeahead.lookup();\n          }\n        });\n\n        $input.blur($scope.inputBlur);\n\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n"]}