{"version":3,"sources":["../src/query_ctrl.js"],"names":[],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import './func_editor';\nimport './metric_segment';\nimport _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\n\nconst AVAILABLE_FUNCTIONS = [\n  {name: 'avg', spec: [{type: 'time', default: '$interval'}]},\n  {name: 'sum', spec: [{type: 'time', default: '$interval'}]},\n  {name: 'min', spec: [{type: 'time', default: '$interval'}]},\n  {name: 'max', spec: [{type: 'time', default: '$interval'}]},\n  {name: 'combine_avg', fun: 'avg', spec: []},\n  {name: 'combine_sum', fun: 'sum', spec: []},\n  //{name: 'combine_min', fun: 'min', spec: []},\n  //{name: 'combine_max', fun: 'max', spec: []},\n  {name: 'derivate', spec: []},\n  {name: 'confidence', spec: []},\n  //{name: 'multiply', spec: [{type: 'number', default: '1'}]},\n  //{name: 'divide', spec: [{type: 'number', default: '1'}]}\n];\n\nconst DEFAULT_FUN = {\n  name: 'avg',\n  args: ['$auto'],\n  spec: _.find(AVAILABLE_FUNCTIONS, {name: 'avg'}).spec\n};\n\nexport class DalmatinerQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv, $q) {\n    super($scope, $injector);\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n\n    this.target.collection = this.target.collection ||\n      uiSegmentSrv.newFake('select collection');\n    this.target.tags = this.target.tags || [];\n    this.target.functions = this.target.functions || [DEFAULT_FUN];\n    this.target.metric = this.target.metric || [];\n\n    this.new_tag = uiSegmentSrv.newPlusButton();\n    this.new_func = uiSegmentSrv.newPlusButton();\n    this.new_func.cssClass = 'query-part';\n    this.new_metric_part = uiSegmentSrv.newFake('...');\n  }\n\n  /**\n   * Methods used by view\n   * -------------------- */\n\n  getCollapsedText() {\n    return this.datasource.getSimplifiedQuery(this.target);\n  }\n\n  getCollections() {\n    return this.datasource.getCollections();\n  }\n\n  getTagKeys() {\n    return this.datasource.getTagKeys(this.target);\n  }\n\n  getTagValues(tagKey) {\n    return this.datasource.getTagValues(this.target, tagKey);\n  }\n\n  getAvailableFunctions() {\n    return this.$q.resolve(AVAILABLE_FUNCTIONS.map(function (info) {\n      return {\n        html: info.name,\n        value: info.name\n      };\n    }));\n  }\n\n  // Get list of supported tag join conditions, first will be used as default\n  getTagConditions() {\n    return [this._newCondition('AND'),\n            this._newCondition('OR')];\n  }\n\n  // Get list of supported tag matching operators, first will be used as default\n  getTagOperators() {\n    return [this._newOperator('=')];\n  }\n\n  getTagOptionsAt(index) {\n    var seg = this.target.tags[index],\n        {type} = seg,\n        tagKeyValue;\n\n    switch (type) {\n    case ('key'):\n      return this.getTagKeys();\n    case ('value'):\n      tagKeyValue = this.target.tags[index - 2].value;\n      return this.getTagValues(JSON.parse(tagKeyValue));\n    case ('condition'):\n      return this.$q.resolve(this.getTagConditions());\n    case ('operator'):\n      return this.$q.resolve(this.getTagOperators());\n    default:\n      throw new Error('Invalid segment type: ' + type);\n    }\n  }\n\n  getMetricOptionsAt(index) {\n    var metric = this.target.metric,\n        parts = index >= 0 ? metric.slice(0, index) : metric,\n        prefix = _.map(parts, 'value');\n\n    return this.datasource.getMetrics(this.target, prefix);\n  }\n\n  addTag() {\n    var {html, value} = this.new_tag,\n        tags = this.target.tags,\n        key = this.uiSegmentSrv.newKey(value);\n\n    key.html = html;\n    if (tags.length > 0)\n      tags.push(this.getTagConditions()[0]);\n    tags.push(key,\n              this.getTagOperators()[0],\n              {html: '...', value: '...', fake: true, type: 'value'});\n    this.new_tag.value = null;\n    this.new_tag.html = this.uiSegmentSrv.newPlusButton().html;\n    this.refresh();\n  }\n\n  onTagSegmentChange(index) {\n    var seg = this.target.tags[index];\n    if (seg.type === 'key') {\n      this.target.tags[index + 2] =\n        {html: '...', value: '...', fake: true, type: 'value'};\n    }\n    this.refresh();\n  }\n\n  addFunction() {\n\n    var {functions} = this.target,\n        name = this.new_func.value,\n        info = this._getFunctionOption(name),\n        defaults = _.map(info.spec, function(s) {\n          return s.default || '';\n        });\n\n    functions.push({\n      name: info.name,\n      fun: info.fun,\n      args: defaults,\n      spec: info.spec\n    });\n\n    this.new_func.value = null;\n    this.new_func.html = this.uiSegmentSrv.newPlusButton().html;\n    this.refresh();\n  }\n\n  removeFunction(index) {\n    this.target.functions.splice(index, 1);\n  }\n\n  moveFunction(from, to) {\n    var {functions} = this.target;\n    if (to >= 0 && to < functions.length) {\n      _.move(functions, from, to);\n    }\n  }\n\n  updateFunctionArg(funcIndex, argIndex, value) {\n    var {functions} = this.target;\n    if (functions[funcIndex] && argIndex < functions[funcIndex].args.length) {\n      functions[funcIndex].args[argIndex] = value;\n    }\n  }\n\n  addMetricPart() {\n    var {value} = this.new_metric_part;\n\n    this.target.metric.push({value: value, html: value});\n    this.new_metric_part.value = null;\n    this.new_metric_part.html = '...';\n    this.refresh();\n  }\n\n  onMetricSegmentChange(index) {\n    this.target.metric.splice(index + 1);\n    this.refresh();\n  }\n\n  removeWhereSegment(index) {\n    var {tags} = this.target;\n    tags.splice(index, 4);\n    if (tags.length === 4) { tags.pop(); }\n    this.refresh();\n  }\n\n  /**\n   * Internal function\n   */\n\n  _newCondition(value) {\n    return this.uiSegmentSrv.newSegment({value, html: value, type: 'condition',\n                                         cssClass: 'query-keyword'});\n  }\n\n  _newOperator(value) {\n    return this.uiSegmentSrv.newSegment({value, html: value, type: 'operator',\n                                         cssClass: 'query-segment-operator'});\n  }\n\n  _getFunctionOption(name) {\n    return _.find(AVAILABLE_FUNCTIONS, {name});\n  }\n};\n\nDalmatinerQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}